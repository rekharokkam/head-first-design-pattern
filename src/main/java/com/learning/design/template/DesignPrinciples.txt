Definition
----------
Defines the skeleton of an algorithm in a method, deferring some steps to subclasses. Template Method lets subclasses redefine certain steps of an algorithm 
	without changing the structure of the algorithm.

Design Principle
----------------

HollyWood Principle - Dont call us we will call you. A high-level component gives the low-level component "dont call us we will call u" treatment. 
A low level component never calls the high-level component directly.

Comparison between Strategy and Template Method Patterns
--------------------------------------------------------

Strategy - Encapsulate an algorithm by Composition.
Template - Encapsulate an algorithm by Inheritance.

Strategy - Defines a family of algorithms. Each algorithm is encapsulated and the client can use these algorithms interchangably.
Template - Defines outline of an algorithm, subclasses define some of the individual steps of the algorithm. 
		   There can be different implementations of an algorithm's individual steps by different subclasses.
		   
Strategy - Each Strategy Object has the entire algorithm encapsulated.
Template - Parent class controls the structure of the algorithm.

Strategy - Entire algorithm is done independently.
Template - There is a dependency on the subclasses for some of the steps of the algorithm.

Strategy - Clients can easily change their algorithm at runtime by simply using a different Strategy Object.
Template - Basic structure of the algorithm is controlled but different subclasses can be used for a few steps of the algorithm.

Note : Look into the Sort () example from the book.

